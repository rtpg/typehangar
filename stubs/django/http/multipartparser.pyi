# Stubs for django.http.multipartparser (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
import six

class MultiPartParserError(Exception): ...
class InputStreamExhausted(Exception): ...

class MultiPartParser:
    def __init__(self, META, input_data, upload_handlers, encoding: Optional[Any] = ...) -> None: ...
    def parse(self): ...
    def handle_file_complete(self, old_field_name, counters): ...
    def IE_sanitize(self, filename): ...

class LazyStream(six.Iterator):
    length = ...  # type: Any
    position = ...  # type: int
    def __init__(self, producer, length: Optional[Any] = ...) -> None: ...
    def tell(self): ...
    def read(self, size: Optional[Any] = ...): ...
    def __next__(self): ...
    def close(self): ...
    def __iter__(self): ...
    def unget(self, bytes): ...

class ChunkIter(six.Iterator):
    flo = ...  # type: Any
    chunk_size = ...  # type: Any
    def __init__(self, flo, chunk_size: Any = ...) -> None: ...
    def __next__(self): ...
    def __iter__(self): ...

class InterBoundaryIter(six.Iterator):
    def __init__(self, stream, boundary) -> None: ...
    def __iter__(self): ...
    def __next__(self): ...

class BoundaryIter(six.Iterator):
    def __init__(self, stream, boundary) -> None: ...
    def __iter__(self): ...
    def __next__(self): ...

class Parser:
    def __init__(self, stream, boundary) -> None: ...
    def __iter__(self): ...
