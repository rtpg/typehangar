# Stubs for django.test.client (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from django.core.handlers.base import BaseHandler

class RedirectCycleError(Exception):
    last_response = ...  # type: Any
    redirect_chain = ...  # type: Any
    def __init__(self, message, last_response) -> None: ...

class FakePayload:
    read_started = ...  # type: bool
    def __init__(self, content: Optional[Any] = ...) -> None: ...
    def __len__(self): ...
    def read(self, num_bytes: Optional[Any] = ...): ...
    def write(self, content): ...

class ClientHandler(BaseHandler):
    enforce_csrf_checks = ...  # type: Any
    def __init__(self, enforce_csrf_checks: bool = ..., *args, **kwargs) -> None: ...
    def __call__(self, environ): ...

def encode_multipart(boundary, data): ...
def encode_file(boundary, key, file): ...

class RequestFactory:
    defaults = ...  # type: Any
    cookies = ...  # type: Any
    errors = ...  # type: Any
    def __init__(self, **defaults) -> None: ...
    def request(self, **request): ...
    def get(self, path, data: Optional[Any] = ..., secure: bool = ..., **extra): ...
    def post(self, path, data: Optional[Any] = ..., content_type: Any = ..., secure: bool = ..., **extra): ...
    def head(self, path, data: Optional[Any] = ..., secure: bool = ..., **extra): ...
    def trace(self, path, secure: bool = ..., **extra): ...
    def options(self, path, data: str = ..., content_type: str = ..., secure: bool = ..., **extra): ...
    def put(self, path, data: str = ..., content_type: str = ..., secure: bool = ..., **extra): ...
    def patch(self, path, data: str = ..., content_type: str = ..., secure: bool = ..., **extra): ...
    def delete(self, path, data: str = ..., content_type: str = ..., secure: bool = ..., **extra): ...
    def generic(self, method, path, data: str = ..., content_type: str = ..., secure: bool = ..., **extra): ...

class Client(RequestFactory):
    handler = ...  # type: Any
    exc_info = ...  # type: Any
    def __init__(self, enforce_csrf_checks: bool = ..., **defaults) -> None: ...
    def store_exc_info(self, **kwargs): ...
    session = ...  # type: Any
    def request(self, **request): ...
    def get(self, path, data: Optional[Any] = ..., follow: bool = ..., secure: bool = ..., **extra): ...
    def post(self, path, data: Optional[Any] = ..., content_type: Any = ..., follow: bool = ..., secure: bool = ..., **extra): ...
    def head(self, path, data: Optional[Any] = ..., follow: bool = ..., secure: bool = ..., **extra): ...
    def options(self, path, data: str = ..., content_type: str = ..., follow: bool = ..., secure: bool = ..., **extra): ...
    def put(self, path, data: str = ..., content_type: str = ..., follow: bool = ..., secure: bool = ..., **extra): ...
    def patch(self, path, data: str = ..., content_type: str = ..., follow: bool = ..., secure: bool = ..., **extra): ...
    def delete(self, path, data: str = ..., content_type: str = ..., follow: bool = ..., secure: bool = ..., **extra): ...
    def trace(self, path, data: str = ..., follow: bool = ..., secure: bool = ..., **extra): ...
    def login(self, **credentials): ...
    def force_login(self, user, backend: Optional[Any] = ...): ...
    cookies = ...  # type: Any
    def logout(self): ...
