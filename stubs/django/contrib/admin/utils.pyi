# Stubs for django.contrib.admin.utils (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from django.db.models.deletion import Collector

def lookup_needs_distinct(opts, lookup_path): ...
def prepare_lookup_value(key, value): ...
def quote(s): ...
def unquote(s): ...
def flatten(fields): ...
def flatten_fieldsets(fieldsets): ...
def get_deleted_objects(objs, opts, user, admin_site, using): ...

class NestedObjects(Collector):
    edges = ...  # type: Any
    protected = ...  # type: Any
    model_objs = ...  # type: Any
    def __init__(self, *args, **kwargs) -> None: ...
    def add_edge(self, source, target): ...
    def collect(self, objs, source: Optional[Any] = ..., source_attr: Optional[Any] = ..., **kwargs): ...
    def related_objects(self, related, objs): ...
    def nested(self, format_callback: Optional[Any] = ...): ...
    def can_fast_delete(self, *args, **kwargs): ...

def model_format_dict(obj): ...
def model_ngettext(obj, n: Optional[Any] = ...): ...
def lookup_field(name, obj, model_admin: Optional[Any] = ...): ...
def label_for_field(name, model, model_admin: Optional[Any] = ..., return_attr: bool = ...): ...
def help_text_for_field(name, model): ...
def display_for_field(value, field, empty_value_display): ...
def display_for_value(value, empty_value_display, boolean: bool = ...): ...

class NotRelationField(Exception): ...

def get_model_from_relation(field): ...
def reverse_field_path(model, path): ...
def get_fields_from_path(model, path): ...
def remove_trailing_data_field(fields): ...
