# Stubs for django.contrib.admin.sites (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from django.utils.translation import ugettext as _

system_check_errors = ...  # type: Any

class AlreadyRegistered(Exception): ...
class NotRegistered(Exception): ...

class AdminSite:
    site_title = ...  # type: Any
    site_header = ...  # type: Any
    index_title = ...  # type: Any
    site_url = ...  # type: str
    login_form = ...  # type: Any
    index_template = ...  # type: Any
    app_index_template = ...  # type: Any
    login_template = ...  # type: Any
    logout_template = ...  # type: Any
    password_change_template = ...  # type: Any
    password_change_done_template = ...  # type: Any
    name = ...  # type: Any
    def __init__(self, name: str = ...) -> None: ...
    def register(self, model_or_iterable, admin_class: Optional[Any] = ..., **options): ...
    def unregister(self, model_or_iterable): ...
    def is_registered(self, model): ...
    def add_action(self, action, name: Optional[Any] = ...): ...
    def disable_action(self, name): ...
    def get_action(self, name): ...
    @property
    def actions(self): ...
    @property
    def empty_value_display(self): ...
    @empty_value_display.setter
    def empty_value_display(self, empty_value_display): ...
    def has_permission(self, request): ...
    def check_dependencies(self): ...
    def admin_view(self, view, cacheable: bool = ...): ...
    def get_urls(self): ...
    @property
    def urls(self): ...
    def each_context(self, request): ...
    def password_change(self, request, extra_context: Optional[Any] = ...): ...
    def password_change_done(self, request, extra_context: Optional[Any] = ...): ...
    def i18n_javascript(self, request): ...
    def logout(self, request, extra_context: Optional[Any] = ...): ...
    def login(self, request, extra_context: Optional[Any] = ...): ...
    def get_app_list(self, request): ...
    def index(self, request, extra_context: Optional[Any] = ...): ...
    def app_index(self, request, app_label, extra_context: Optional[Any] = ...): ...

site = ...  # type: Any
