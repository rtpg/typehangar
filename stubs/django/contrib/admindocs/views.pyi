# Stubs for django.contrib.admindocs.views (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from django.utils.translation import ugettext as _
from django.views.generic import TemplateView

MODEL_METHODS_EXCLUDE = ...  # type: Any

class BaseAdminDocsView(TemplateView):
    template_name = ...  # type: str
    def dispatch(self, request, *args, **kwargs): ...
    def get_context_data(self, **kwargs): ...

class BookmarkletsView(BaseAdminDocsView):
    template_name = ...  # type: str
    def get_context_data(self, **kwargs): ...

class TemplateTagIndexView(BaseAdminDocsView):
    template_name = ...  # type: str
    def get_context_data(self, **kwargs): ...

class TemplateFilterIndexView(BaseAdminDocsView):
    template_name = ...  # type: str
    def get_context_data(self, **kwargs): ...

class ViewIndexView(BaseAdminDocsView):
    template_name = ...  # type: str
    def get_context_data(self, **kwargs): ...

class ViewDetailView(BaseAdminDocsView):
    template_name = ...  # type: str
    def get_context_data(self, **kwargs): ...

class ModelIndexView(BaseAdminDocsView):
    template_name = ...  # type: str
    def get_context_data(self, **kwargs): ...

class ModelDetailView(BaseAdminDocsView):
    template_name = ...  # type: str
    def get_context_data(self, **kwargs): ...

class TemplateDetailView(BaseAdminDocsView):
    template_name = ...  # type: str
    def get_context_data(self, **kwargs): ...

def get_return_data_type(func_name): ...
def get_readable_field_data_type(field): ...
def extract_views_from_urlpatterns(urlpatterns, base: str = ..., namespace: Optional[Any] = ...): ...

named_group_matcher = ...  # type: Any
non_named_group_matcher = ...  # type: Any

def simplify_regex(pattern): ...
