# Stubs for django.contrib.auth.password_validation (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from django.utils.translation import ugettext as _

def get_default_password_validators(): ...
def get_password_validators(validator_config): ...
def validate_password(password, user: Optional[Any] = ..., password_validators: Optional[Any] = ...): ...
def password_changed(password, user: Optional[Any] = ..., password_validators: Optional[Any] = ...): ...
def password_validators_help_texts(password_validators: Optional[Any] = ...): ...

password_validators_help_text_html = ...  # type: Any

class MinimumLengthValidator:
    min_length = ...  # type: Any
    def __init__(self, min_length: int = ...) -> None: ...
    def validate(self, password, user: Optional[Any] = ...): ...
    def get_help_text(self): ...

class UserAttributeSimilarityValidator:
    DEFAULT_USER_ATTRIBUTES = ...  # type: Any
    user_attributes = ...  # type: Any
    max_similarity = ...  # type: Any
    def __init__(self, user_attributes: Any = ..., max_similarity: float = ...) -> None: ...
    def validate(self, password, user: Optional[Any] = ...): ...
    def get_help_text(self): ...

class CommonPasswordValidator:
    DEFAULT_PASSWORD_LIST_PATH = ...  # type: Any
    passwords = ...  # type: Any
    def __init__(self, password_list_path: Any = ...) -> None: ...
    def validate(self, password, user: Optional[Any] = ...): ...
    def get_help_text(self): ...

class NumericPasswordValidator:
    def validate(self, password, user: Optional[Any] = ...): ...
    def get_help_text(self): ...
