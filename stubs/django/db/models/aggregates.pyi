# Stubs for django.db.models.aggregates (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from django.db.models.expressions import Func

class Aggregate(Func):
    contains_aggregate = ...  # type: bool
    name = ...  # type: Any
    def resolve_expression(self, query: Optional[Any] = ..., allow_joins: bool = ..., reuse: Optional[Any] = ..., summarize: bool = ..., for_save: bool = ...): ...
    @property
    def default_alias(self): ...
    def get_group_by_cols(self): ...

class Avg(Aggregate):
    function = ...  # type: str
    name = ...  # type: str
    def __init__(self, expression, **extra) -> None: ...
    def as_oracle(self, compiler, connection): ...

class Count(Aggregate):
    function = ...  # type: str
    name = ...  # type: str
    template = ...  # type: str
    def __init__(self, expression, distinct: bool = ..., **extra) -> None: ...
    def convert_value(self, value, expression, connection, context): ...

class Max(Aggregate):
    function = ...  # type: str
    name = ...  # type: str

class Min(Aggregate):
    function = ...  # type: str
    name = ...  # type: str

class StdDev(Aggregate):
    name = ...  # type: str
    function = ...  # type: Any
    def __init__(self, expression, sample: bool = ..., **extra) -> None: ...
    def convert_value(self, value, expression, connection, context): ...

class Sum(Aggregate):
    function = ...  # type: str
    name = ...  # type: str
    def as_oracle(self, compiler, connection): ...

class Variance(Aggregate):
    name = ...  # type: str
    function = ...  # type: Any
    def __init__(self, expression, sample: bool = ..., **extra) -> None: ...
    def convert_value(self, value, expression, connection, context): ...
