# Stubs for django.db.models.sql.aggregates (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from django.db.models.query_utils import RegisterLookupMixin

class Aggregate(RegisterLookupMixin):
    is_ordinal = ...  # type: bool
    is_computed = ...  # type: bool
    sql_template = ...  # type: str
    col = ...  # type: Any
    source = ...  # type: Any
    is_summary = ...  # type: Any
    extra = ...  # type: Any
    field = ...  # type: Any
    def __init__(self, col, source: Optional[Any] = ..., is_summary: bool = ..., **extra) -> None: ...
    def relabeled_clone(self, change_map): ...
    def as_sql(self, compiler, connection): ...
    def get_group_by_cols(self): ...
    @property
    def output_field(self): ...

class Avg(Aggregate):
    is_computed = ...  # type: bool
    sql_function = ...  # type: str

class Count(Aggregate):
    is_ordinal = ...  # type: bool
    sql_function = ...  # type: str
    sql_template = ...  # type: str
    def __init__(self, col, distinct: bool = ..., **extra) -> None: ...

class Max(Aggregate):
    sql_function = ...  # type: str

class Min(Aggregate):
    sql_function = ...  # type: str

class StdDev(Aggregate):
    is_computed = ...  # type: bool
    sql_function = ...  # type: Any
    def __init__(self, col, sample: bool = ..., **extra) -> None: ...

class Sum(Aggregate):
    sql_function = ...  # type: str

class Variance(Aggregate):
    is_computed = ...  # type: bool
    sql_function = ...  # type: Any
    def __init__(self, col, sample: bool = ..., **extra) -> None: ...
