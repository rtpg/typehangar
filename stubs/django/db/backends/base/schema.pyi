# Stubs for django.db.backends.base.schema (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

logger = ...  # type: Any

class BaseDatabaseSchemaEditor:
    sql_create_table = ...  # type: str
    sql_rename_table = ...  # type: str
    sql_retablespace_table = ...  # type: str
    sql_delete_table = ...  # type: str
    sql_create_column = ...  # type: str
    sql_alter_column = ...  # type: str
    sql_alter_column_type = ...  # type: str
    sql_alter_column_null = ...  # type: str
    sql_alter_column_not_null = ...  # type: str
    sql_alter_column_default = ...  # type: str
    sql_alter_column_no_default = ...  # type: str
    sql_delete_column = ...  # type: str
    sql_rename_column = ...  # type: str
    sql_update_with_default = ...  # type: str
    sql_create_check = ...  # type: str
    sql_delete_check = ...  # type: str
    sql_create_unique = ...  # type: str
    sql_delete_unique = ...  # type: str
    sql_create_fk = ...  # type: str
    sql_create_inline_fk = ...  # type: Any
    sql_delete_fk = ...  # type: str
    sql_create_index = ...  # type: str
    sql_delete_index = ...  # type: str
    sql_create_pk = ...  # type: str
    sql_delete_pk = ...  # type: str
    connection = ...  # type: Any
    collect_sql = ...  # type: Any
    collected_sql = ...  # type: Any
    def __init__(self, connection, collect_sql: bool = ...) -> None: ...
    deferred_sql = ...  # type: Any
    atomic = ...  # type: Any
    def __enter__(self): ...
    def __exit__(self, exc_type, exc_value, traceback): ...
    def execute(self, sql, params: Any = ...): ...
    def quote_name(self, name): ...
    def column_sql(self, model, field, include_default: bool = ...): ...
    def skip_default(self, field): ...
    def prepare_default(self, value): ...
    def effective_default(self, field): ...
    def quote_value(self, value): ...
    def create_model(self, model): ...
    def delete_model(self, model): ...
    def alter_unique_together(self, model, old_unique_together, new_unique_together): ...
    def alter_index_together(self, model, old_index_together, new_index_together): ...
    def alter_db_table(self, model, old_db_table, new_db_table): ...
    def alter_db_tablespace(self, model, old_db_tablespace, new_db_tablespace): ...
    def add_field(self, model, field): ...
    def remove_field(self, model, field): ...
    def alter_field(self, model, old_field, new_field, strict: bool = ...): ...
