# Stubs for django.db.backends.oracle.features (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from django.db.backends.base.features import BaseDatabaseFeatures

pytz = ...  # type: Any

class DatabaseFeatures(BaseDatabaseFeatures):
    empty_fetchmany_value = ...  # type: Any
    interprets_empty_strings_as_nulls = ...  # type: bool
    uses_savepoints = ...  # type: bool
    has_select_for_update = ...  # type: bool
    has_select_for_update_nowait = ...  # type: bool
    can_return_id_from_insert = ...  # type: bool
    allow_sliced_subqueries = ...  # type: bool
    supports_subqueries_in_group_by = ...  # type: bool
    supports_transactions = ...  # type: bool
    supports_timezones = ...  # type: bool
    has_zoneinfo_database = ...  # type: Any
    supports_bitwise_or = ...  # type: bool
    has_native_duration_field = ...  # type: bool
    can_defer_constraint_checks = ...  # type: bool
    supports_partially_nullable_unique_constraints = ...  # type: bool
    truncates_names = ...  # type: bool
    has_bulk_insert = ...  # type: bool
    supports_tablespaces = ...  # type: bool
    supports_sequence_reset = ...  # type: bool
    can_introspect_default = ...  # type: bool
    can_introspect_max_length = ...  # type: bool
    can_introspect_time_field = ...  # type: bool
    atomic_transactions = ...  # type: bool
    supports_combined_alters = ...  # type: bool
    nulls_order_largest = ...  # type: bool
    requires_literal_defaults = ...  # type: bool
    closed_cursor_error_class = ...  # type: Any
    bare_select_suffix = ...  # type: str
    uppercases_column_names = ...  # type: bool
    supports_select_for_update_with_limit = ...  # type: bool
    def introspected_boolean_field_type(self, field: Optional[Any] = ..., created_separately: bool = ...): ...
