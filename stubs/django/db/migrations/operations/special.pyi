# Stubs for django.db.migrations.operations.special (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from .base import Operation as Operation

class SeparateDatabaseAndState(Operation):
    serialization_expand_args = ...  # type: Any
    database_operations = ...  # type: Any
    state_operations = ...  # type: Any
    def __init__(self, database_operations: Optional[Any] = ..., state_operations: Optional[Any] = ...) -> None: ...
    def deconstruct(self): ...
    def state_forwards(self, app_label, state): ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state): ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state): ...
    def describe(self): ...

class RunSQL(Operation):
    noop = ...  # type: str
    sql = ...  # type: Any
    reverse_sql = ...  # type: Any
    state_operations = ...  # type: Any
    hints = ...  # type: Any
    def __init__(self, sql, reverse_sql: Optional[Any] = ..., state_operations: Optional[Any] = ..., hints: Optional[Any] = ...) -> None: ...
    def deconstruct(self): ...
    @property
    def reversible(self): ...
    def state_forwards(self, app_label, state): ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state): ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state): ...
    def describe(self): ...

class RunPython(Operation):
    reduces_to_sql = ...  # type: bool
    atomic = ...  # type: Any
    code = ...  # type: Any
    reverse_code = ...  # type: Any
    hints = ...  # type: Any
    def __init__(self, code, reverse_code: Optional[Any] = ..., atomic: bool = ..., hints: Optional[Any] = ...) -> None: ...
    def deconstruct(self): ...
    @property
    def reversible(self): ...
    def state_forwards(self, app_label, state): ...
    def database_forwards(self, app_label, schema_editor, from_state, to_state): ...
    def database_backwards(self, app_label, schema_editor, from_state, to_state): ...
    def describe(self): ...
    @staticmethod
    def noop(apps, schema_editor): ...
