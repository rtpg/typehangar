# Stubs for django.db.utils (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

DEFAULT_DB_ALIAS = ...  # type: str
DJANGO_VERSION_PICKLE_KEY = ...  # type: str

class Error: ...
class InterfaceError(Error): ...
class DatabaseError(Error): ...
class DataError(DatabaseError): ...
class OperationalError(DatabaseError): ...
class IntegrityError(DatabaseError): ...
class InternalError(DatabaseError): ...
class ProgrammingError(DatabaseError): ...
class NotSupportedError(DatabaseError): ...

class DatabaseErrorWrapper:
    wrapper = ...  # type: Any
    def __init__(self, wrapper) -> None: ...
    def __enter__(self): ...
    def __exit__(self, exc_type, exc_value, traceback): ...
    def __call__(self, func): ...

def load_backend(backend_name): ...

class ConnectionDoesNotExist(Exception): ...

class ConnectionHandler:
    def __init__(self, databases: Optional[Any] = ...) -> None: ...
    def databases(self): ...
    def ensure_defaults(self, alias): ...
    def prepare_test_settings(self, alias): ...
    def __getitem__(self, alias): ...
    def __setitem__(self, key, value): ...
    def __delitem__(self, key): ...
    def __iter__(self): ...
    def all(self): ...
    def close_all(self): ...

class ConnectionRouter:
    def __init__(self, routers: Optional[Any] = ...) -> None: ...
    def routers(self): ...
    db_for_read = ...  # type: Any
    db_for_write = ...  # type: Any
    def allow_relation(self, obj1, obj2, **hints): ...
    def allow_migrate(self, db, app_label, **hints): ...
    def allow_migrate_model(self, db, model): ...
    def get_migratable_models(self, app_config, db, include_auto_created: bool = ...): ...
