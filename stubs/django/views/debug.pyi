# Stubs for django.views.debug (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any
from django.utils.translation import ugettext as _

DEBUG_ENGINE = ...  # type: Any
HIDDEN_SETTINGS = ...  # type: Any
CLEANSED_SUBSTITUTE = ...  # type: str

class CallableSettingWrapper:
    def __init__(self, callable_setting) -> None: ...

def cleanse_setting(key, value): ...
def get_safe_settings(): ...
def technical_500_response(request, exc_type, exc_value, tb, status_code: int = ...): ...
def get_default_exception_reporter_filter(): ...
def get_exception_reporter_filter(request): ...

class ExceptionReporterFilter:
    def get_post_parameters(self, request): ...
    def get_traceback_frame_variables(self, request, tb_frame): ...

class SafeExceptionReporterFilter(ExceptionReporterFilter):
    def is_active(self, request): ...
    def get_cleansed_multivaluedict(self, request, multivaluedict): ...
    def get_post_parameters(self, request): ...
    def cleanse_special_types(self, request, value): ...
    def get_traceback_frame_variables(self, request, tb_frame): ...

class ExceptionReporter:
    request = ...  # type: Any
    filter = ...  # type: Any
    exc_type = ...  # type: Any
    exc_value = ...  # type: Any
    tb = ...  # type: Any
    is_email = ...  # type: Any
    template_info = ...  # type: Any
    template_does_not_exist = ...  # type: bool
    postmortem = ...  # type: Any
    def __init__(self, request, exc_type, exc_value, tb, is_email: bool = ...) -> None: ...
    def get_traceback_data(self): ...
    def get_traceback_html(self): ...
    def get_traceback_text(self): ...
    def get_traceback_frames(self): ...
    def format_exception(self): ...

def technical_404_response(request, exception): ...
def default_urlconf(request): ...

TECHNICAL_500_TEMPLATE = ...  # type: str
TECHNICAL_500_TEXT_TEMPLATE = ...  # type: str
TECHNICAL_404_TEMPLATE = ...  # type: str
DEFAULT_URLCONF_TEMPLATE = ...  # type: str
