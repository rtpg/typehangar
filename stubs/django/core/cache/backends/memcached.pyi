# Stubs for django.core.cache.backends.memcached (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from django.core.cache.backends.base import BaseCache

class BaseMemcachedCache(BaseCache):
    LibraryValueNotFoundException = ...  # type: Any
    def __init__(self, server, params, library, value_not_found_exception) -> None: ...
    def get_backend_timeout(self, timeout: Any = ...): ...
    def make_key(self, key, version: Optional[Any] = ...): ...
    def add(self, key, value, timeout: Any = ..., version: Optional[Any] = ...): ...
    def get(self, key, default: Optional[Any] = ..., version: Optional[Any] = ...): ...
    def set(self, key, value, timeout: Any = ..., version: Optional[Any] = ...): ...
    def delete(self, key, version: Optional[Any] = ...): ...
    def get_many(self, keys, version: Optional[Any] = ...): ...
    def close(self, **kwargs): ...
    def incr(self, key, delta: int = ..., version: Optional[Any] = ...): ...
    def decr(self, key, delta: int = ..., version: Optional[Any] = ...): ...
    def set_many(self, data, timeout: Any = ..., version: Optional[Any] = ...): ...
    def delete_many(self, keys, version: Optional[Any] = ...): ...
    def clear(self): ...

class MemcachedCache(BaseMemcachedCache):
    def __init__(self, server, params) -> None: ...

class PyLibMCCache(BaseMemcachedCache):
    def __init__(self, server, params) -> None: ...
